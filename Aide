acme:
	Edit X/pfsh/D

aide:
	grep -n ':$' Aide /dev/null | sed 's,: , ,g;s,:$, ,g' | fmt

change:
	git
	git add --all .
	git diff
	git diff --staged
	nsh git diff

commit:
	git log --decorate --graph --oneline --all | sed '/origin\/master/q'
	git log --decorate --oneline --graph --all -n 5
	git show HEAD
	log github git commit -a -m 'Add wrapper script pfsh to find bash scripts, and update Aide with remote-creation commands.'
	log github git commit -a -m 'Update Aide.'
	nsh git diff 5e4e218 bdd5e60

config:
	git config --get remote.origin.url

dump:
	Dump /github/pfsh/dump

edit:
	|sort|uniq
	|tr A-Z a-z

file:
	/dis/Aide
	/github/pfsh/bash-script/package/package
	/github/pfsh/bash-script/package/test/package.test
	cp -x pfsh /n/local/home/jason/bin

history:
	log github

host:
	host deploy cache ls
	host pfsh env | grep PATH
	host pfsh which pmapex
	host rash pfsh which jfrog
	if {host rash pfsh regress} {echo git push origin master}
	nsh host deploy cache -d ls

man:
	The multiprogram file contains several interpreted scripts in one file.  Each line of each script is preceded by a tab, the basename of the interpreter, a greater-than symbol, and a space (eg "^\tsh> ").
	lit - extract script from a literate program
	usage: lit $interpreter $multiprogram

remote:
	git fetch --all
	log github git push c master
	git rebase origin/master

repo:
	.git/info/exclude
	git remote
	git remote add c catenate:catenate/pfsh.git
	git remote show c

search:
	apply {ls -l $1} `{git | grep -v '^#' | sed 's,.* ,,'}
	ls -F | mc
	ls -l
	du -n | grep '\.test$'
	du -n | grep -v '\.git' | grep map
	du -n | grep Aide
	du -n | grep mock
	git grep mock
	git grep oneof

view:
	dos evince /home/jcatena/Dropbox/wabe2/wabe-funsh.pdf

web:
	web http://github.com/catenate/pfsh
